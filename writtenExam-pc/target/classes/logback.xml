<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2010-2011 The myBatis Team Licensed under the Apache License, 
    Version 2.0 (the "License"); you may not use this file except in compliance 
    with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
    Unless required by applicable law or agreed to in writing, software distributed 
    under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
    OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
    the specific language governing permissions and limitations under the License. -->
<configuration debug="false" scan="true">

    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->
    <property name="LOG_HOME" value="${catalina.home}/logs_resume" />

    <!-- 日志输出到数据库
    <appender name="db-classic-mysql" class="ch.qos.logback.classic.db.DBAppender">
        <connectionSource class="ch.qos.logback.core.db.DriverManagerConnectionSource">
            <driverClass>com.mysql.jdbc.Driver</driverClass>
            <url>jdbc:mysql://192.168.1.120:3339/logback_yuncai_appserver</url>
            <user>yuncailog</user>
            <password>yuncailog</password>
        </connectionSource>
    </appender> -->

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!-- 格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 按照每小时生成日志文件 -->
    <appender name="HOUR"
        class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy
            class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名 -->
            <FileNamePattern>${LOG_HOME}/resume.%d{yyyy-MM-dd_HH}.log</FileNamePattern>
            <!--日志文件保留一周 -->
            <MaxHistory>168</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
        <!--日志文件最大的大小
        <triggeringPolicy
            class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy> -->
    </appender>

    <!-- 导入线程按照每小时生成日志文件 -->
    <appender name="IMPORT_QUEUE_HOUR"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy
                class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名 -->
            <FileNamePattern>${LOG_HOME}/resume_import.%d{yyyy-MM-dd_HH}.log</FileNamePattern>
            <!--日志文件保留一周 -->
            <MaxHistory>168</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
        <!--日志文件最大的大小
        <triggeringPolicy
            class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy> -->
    </appender>
    <!-- 按照每小时生成日志文件，并且超过大小就拆分多个
    <appender name="HOURSIZE"
        class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy
            class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_HOME}/yuncai.%d{yyyy-MM-dd_HH}.%i.log</FileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender> -->

    <!-- 默认第三方org包下的不打印日志 -->
    <logger name="org" level="ERROR" />
    <!-- ideajdbc -->
    <logger name="ideajdbc.ConnectionLogger" level="INFO" />
    <logger name="ideajdbc.ResultSetLogger" level="INFO" />
    <logger name="com.ideamoment.ideajdbc.transaction.ScopeTransaction" level="DEBUG" />
    <!-- Request请求信息 -->
    <logger name="com.dayee.writtenExam.pc.filter.UserContextFilter" level="INFO" />
    <!--导入日志单独输出到log_resume/resume_import.时间.log-->
   <!-- <logger name="com.dayee.writtenExam.service.queue" level="DEBUG" additivity="false">
        <appender-ref ref="IMPORT_QUEUE_HOUR"></appender-ref>
        <appender-ref ref="STDOUT" />
    </logger>-->
    <!-- 日志输出级别 -->
    <root level="DEBUG">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="HOUR" />
        <!-- <appender-ref ref="HOURSIZE" /> -->
        <!-- <appender-ref ref="db-classic-mysql" /> -->
    </root>
</configuration>